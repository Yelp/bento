apply plugin: 'signing'
apply plugin: 'net.linguica.maven-settings'
apply plugin: 'maven-publish'

group Publishing.GROUP
version Publishing.VERSION

android {
    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.getByName('release')
                groupId = Publishing.GROUP
                version = Publishing.VERSION

                pom {
                    name = projectName
                    description = projectDescription
                    url = 'https://github.com/Yelp/bento'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'Yelp'
                            email = '?'
                        }

                        developer {
                            id = 'targo'
                            name = 'Tyler Argo'
                            email = 'targo@yelp.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git@github.com:Yelp/bento.git'
                        developerConnection = 'scm:git:git@github.com:Yelp/bento.git'
                        url = 'https://github.com/Yelp/bento'
                    }
                }
            }
        }

        repositories {
            maven {
                if (isReleaseBuild()) {
                    name "SonatypeRelease"
                    url RELEASE_SONATYPE_URL
                } else {
                    name "SonatypeSnapshot"
                    url SNAPSHOT_SONATYPE_URL
                }
                if (project.hasProperty("signing.keyId")) {
                    credentials {
                        username = ossrhUsername
                        password = ossrhPassword
                    }
                }
            }
        }
    }
}

signing {
    required { project.hasProperty("signing.keyId") }
    sign publishing.publications.matching { "release" }
}

static def isReleaseBuild() {
    return !Publishing.VERSION.endsWith("-SNAPSHOT")
}
